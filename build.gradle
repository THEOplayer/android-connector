import org.jetbrains.dokka.gradle.AbstractDokkaLeafTask
import org.jetbrains.dokka.gradle.DokkaMultiModuleTask

import java.time.Year

// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    repositories {
        google()
        mavenCentral()
    }
    dependencies {
        classpath "org.jetbrains.dokka:dokka-gradle-plugin:1.9.20"
    }
}

plugins {
    alias libs.plugins.android.application apply false
    alias libs.plugins.android.library apply false
    alias libs.plugins.kotlin.android apply false
    alias libs.plugins.compose.compiler apply false
    alias libs.plugins.dokka
    alias libs.plugins.kotlinx.serialization apply false
}

tasks.register('updateVersion') {
    def sdkVersion = project.ext.sdkVersion
    ant.replaceregexp(file: 'gradle.properties', match: 'sdkVersion=.*', replace: "sdkVersion=$sdkVersion", flags: 'g', byline: true)
    ant.replaceregexp(file: 'gradle.properties', match: 'connectorVersion=.*', replace: "connectorVersion=$sdkVersion", flags: 'g', byline: true)
}

tasks.register('clean', Delete) {
    delete rootProject.buildDir
}

tasks.withType(DokkaMultiModuleTask.class).configureEach {
    moduleName = "THEOplayer Connectors for Android"

    String dokkaBaseConfiguration = """
    {
      "customAssets": ["${file("assets/logo-icon.svg").path.replace('\\', "\\\\")}"],
      "footerMessage": "&copy; ${Year.now().value} THEO Technologies"
    }
    """
    pluginsMapConfiguration.set(
            // fully qualified plugin name to json configuration
            ["org.jetbrains.dokka.base.DokkaBase": dokkaBaseConfiguration]
    )
}

tasks.dokkaHtmlMultiModule.configure {
    outputDirectory = rootProject.file("site/api")
}

subprojects {
    version = connectorVersion

    tasks.withType(AbstractDokkaLeafTask.class).configureEach {
        suppressObviousFunctions.set(true)
        suppressInheritedMembers.set(true)

        dokkaSourceSets {
            configureEach {
                includeNonPublic.set(false)     // Use to include or exclude non public members
                skipDeprecated.set(false)       // Do not output deprecated members. Applies globally, can be overridden by packageOptions
                // Emit warnings about not documented members. Applies globally, also can be overridden by packageOptions
                reportUndocumented.set(true)
                skipEmptyPackages.set(false)    // Do not create index pages for empty packages
                jdkVersion.set(11)              // Used for linking to JDK documentation
                noStdlibLink.set(false)         // Use to enable or disable linking to online kotlin-stdlib documentation
                noJdkLink.set(false)            // Use to enable or disable linking to online JDK documentation
                // Use to enable or disable linking to online Android documentation (only applicable for Android projects)
                noAndroidSdkLink.set(false)

                externalDocumentationLink {
                    url.set(new URL("https://www.theoplayer.com/docs/theoplayer/v7/api-reference/android/"))
                    // TODO: Fix link to https://www.theoplayer.com/docs/theoplayer/v7/api-reference/android/package-list
                    packageListUrl.set(new URL("https://raw.githubusercontent.com/THEOplayer/documentation/main/theoplayer/static/theoplayer/v7/api-reference/android/package-list"))
                }

                perPackageOption {
                    matchingRegex.set("com[.]theoplayer[.]android[.]connector[.].*[.]internal.*")
                    suppress.set(true)
                }
            }
        }
    }
}